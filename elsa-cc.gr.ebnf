
__EarlyStartSymbol ::=
	File TOK_EOF 

File ::=
	TranslationUnit 

Identifier ::=
	TOK_NAME 

TranslationUnit ::=
	/*empty*/
	| TranslationUnit TFDeclaration 
	| TranslationUnit TOK_SEMICOLON 

PrimaryExpression ::=
	Literal 
	| TOK_THIS 
	| TOK_LPAREN Expression TOK_RPAREN 
	| IdExpression 

Literal ::=
	TOK_INT_LITERAL 
	| TOK_FLOAT_LITERAL 
	| StringLiteral 
	| TOK_CHAR_LITERAL 
	| TOK_TRUE 
	| TOK_FALSE 

PreprocString ::=
	TOK_STRING_LITERAL 

StringLiteral ::=
	PreprocString 
	| PreprocString StringLiteral 

IdExpression ::=
	PQualifiedId 
	| TOK_COLONCOLON PQualifiedId 

UnqualifiedId ::=
	Identifier 
	| OperatorFunctionId 
	| ConversionFunctionId 
	| TemplateId 

PQualifiedId ::=
	UnqualifiedId 
	| Identifier TOK_COLONCOLON PQualifiedId 
	| Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN TOK_COLONCOLON PQualifiedId 
	| TOK_TEMPLATE Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN TOK_COLONCOLON PQualifiedId 

ArgumentList ::=
	TOK_LPAREN ExpressionListOpt TOK_RPAREN 

PostfixExpression ::=
	PrimaryExpression 
	| PostfixExpression TOK_LBRACKET Expression TOK_RBRACKET 
	| PostfixExpression ArgumentList 
	| TOK_TYPENAME IdExpression ArgumentList 
	| CtorExpressionType ArgumentList 
	| PostfixExpression TOK_DOT NameAfterDot 
	| PostfixExpression TOK_ARROW NameAfterDot 
	| PostfixExpression TOK_PLUSPLUS 
	| PostfixExpression TOK_MINUSMINUS 
	| CastKeyword TOK_LESSTHAN TypeId TOK_GREATERTHAN TOK_LPAREN Expression TOK_RPAREN 
	| TOK_TYPEID TOK_LPAREN Expression TOK_RPAREN 
	| TOK_TYPEID TOK_LPAREN TypeId TOK_RPAREN 

CtorExpressionType ::=
	PQTypeName 
	| TOK_CHAR 
	| TOK_WCHAR_T 
	| TOK_BOOL 
	| TOK_SHORT 
	| TOK_INT 
	| TOK_LONG 
	| TOK_SIGNED 
	| TOK_UNSIGNED 
	| TOK_FLOAT 
	| TOK_DOUBLE 
	| TOK_VOID 

CastKeyword ::=
	TOK_DYNAMIC_CAST 
	| TOK_STATIC_CAST 
	| TOK_REINTERPRET_CAST 
	| TOK_CONST_CAST 

ExpressionList ::=
	AssignmentExpression 
	| AssignmentExpression TOK_COMMA ExpressionList 

ExpressionListOpt ::=
	/*empty*/
	| ExpressionList 

UnaryExpression ::=
	PostfixExpression 
	| TOK_PLUSPLUS CastExpression 
	| TOK_MINUSMINUS CastExpression 
	| TOK_SIZEOF UnaryExpression 
	| DeleteExpression 
	| TOK_STAR CastExpression 
	| TOK_AND CastExpression 
	| TOK_PLUS CastExpression 
	| TOK_MINUS CastExpression 
	| TOK_BANG CastExpression 
	| TOK_TILDE CastExpression 
	| TOK_SIZEOF TOK_LPAREN TypeId TOK_RPAREN 
	| NewExpression 

ColonColonOpt ::=
	/*empty*/
	| TOK_COLONCOLON 

NewExpression ::=
	ColonColonOpt TOK_NEW NewPlacementOpt NewTypeId NewInitializerOpt 
	| ColonColonOpt TOK_NEW NewPlacementOpt TOK_LPAREN TypeId TOK_RPAREN NewInitializerOpt 

NewPlacementOpt ::=
	/*empty*/
	| TOK_LPAREN ExpressionList TOK_RPAREN 

NewTypeId ::=
	TypeSpecifier NewDeclaratorOpt 

NewDeclaratorOpt ::=
	/*empty*/
	| TOK_STAR CVQualifierSeqOpt NewDeclaratorOpt 
	| PtrToMemberName TOK_STAR CVQualifierSeqOpt NewDeclaratorOpt 
	| DirectNewDeclarator 

DirectNewDeclarator ::=
	TOK_LBRACKET Expression TOK_RBRACKET 
	| DirectNewDeclarator TOK_LBRACKET ConstantExpression TOK_RBRACKET 

NewInitializerOpt ::=
	/*empty*/
	| TOK_LPAREN ExpressionListOpt TOK_RPAREN 

DeleteExpression ::=
	ColonColonOpt TOK_DELETE CastExpression 
	| ColonColonOpt TOK_DELETE TOK_LBRACKET TOK_RBRACKET CastExpression 

NameAfterDot ::=
	NAD1 
	| TOK_COLONCOLON NAD2 

NAD1 ::=
	NAD2 
	| TOK_TEMPLATE Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN 
	| TOK_TILDE Identifier 
	| TOK_TILDE Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN 
	| ConversionFunctionId 
	| TOK_TEMPLATE Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN TOK_COLONCOLON NAD1 

NAD2 ::=
	Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN 
	| Identifier 
	| OperatorFunctionId 
	| OperatorFunctionId TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN 
	| TOK_TEMPLATE OperatorFunctionId TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN 
	| Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN TOK_COLONCOLON NAD1 
	| Identifier TOK_COLONCOLON NAD1 

CastExpression ::=
	UnaryExpression 
	| TOK_LPAREN TypeId TOK_RPAREN CastExpression 

BinExp_high ::=
	CastExpression 
	| BinExp_high TOK_DOTSTAR BinExp_high 
	| BinExp_high TOK_ARROWSTAR BinExp_high 
	| BinExp_high TOK_STAR BinExp_high 
	| BinExp_high TOK_SLASH BinExp_high 
	| BinExp_high TOK_PERCENT BinExp_high 
	| BinExp_high TOK_PLUS BinExp_high 
	| BinExp_high TOK_MINUS BinExp_high 
	| BinExp_high TOK_LEFTSHIFT BinExp_high 
	| BinExp_high TOK_RIGHTSHIFT BinExp_high 

BinExp_mid ::=
	BinExp_high 
	| BinExp_mid TOK_LESSTHAN BinExp_high 
	| BinExp_mid TOK_GREATERTHAN BinExp_high 
	| BinExp_mid TOK_LESSEQ BinExp_high 
	| BinExp_mid TOK_GREATEREQ BinExp_high 

BinaryExpression ::=
	BinExp_mid 
	| BinaryExpression TOK_EQUALEQUAL BinaryExpression 
	| BinaryExpression TOK_NOTEQUAL BinaryExpression 
	| BinaryExpression TOK_AND BinaryExpression 
	| BinaryExpression TOK_XOR BinaryExpression 
	| BinaryExpression TOK_OR BinaryExpression 
	| BinaryExpression TOK_ANDAND BinaryExpression 
	| BinaryExpression TOK_OROR BinaryExpression 

ConditionalExpression ::=
	BinaryExpression 
	| BinaryExpression TOK_QUESTION Expression TOK_COLON AssignmentExpression 

AssignmentExpression ::=
	ConditionalExpression 
	| BinaryExpression AssignmentOperator AssignmentExpression 
	| ThrowExpression 

AssignmentOperator ::=
	TOK_STAREQUAL 
	| TOK_SLASHEQUAL 
	| TOK_PERCENTEQUAL 
	| TOK_PLUSEQUAL 
	| TOK_MINUSEQUAL 
	| TOK_RIGHTSHIFTEQUAL 
	| TOK_LEFTSHIFTEQUAL 
	| TOK_ANDEQUAL 
	| TOK_XOREQUAL 
	| TOK_OREQUAL 
	| TOK_EQUAL 

Expression ::=
	AssignmentExpression 
	| Expression TOK_COMMA AssignmentExpression 

ExpressionOpt ::=
	/*empty*/
	| Expression 

ConstantExpression ::=
	AssignmentExpression 

ConstantExpressionOpt ::=
	/*empty*/
	| ConstantExpression 

LabelAndColon ::=
	Identifier TOK_COLON 

Statement ::=
	LabelAndColon Statement 
	| TOK_CASE ConstantExpression TOK_COLON Statement 
	| TOK_DEFAULT TOK_COLON Statement 
	| ExpressionStatement 
	| CompoundStatement 
	| TOK_IF TOK_LPAREN Condition TOK_RPAREN Statement 
	| TOK_IF TOK_LPAREN Condition TOK_RPAREN Statement TOK_ELSE Statement 
	| TOK_SWITCH TOK_LPAREN Condition TOK_RPAREN Statement 
	| TOK_WHILE TOK_LPAREN Condition TOK_RPAREN Statement 
	| TOK_DO Statement TOK_WHILE TOK_LPAREN Expression TOK_RPAREN TOK_SEMICOLON 
	| TOK_FOR TOK_LPAREN ForInitStatement ConditionOpt TOK_SEMICOLON ExpressionOpt TOK_RPAREN Statement 
	| TOK_BREAK TOK_SEMICOLON 
	| TOK_CONTINUE TOK_SEMICOLON 
	| TOK_RETURN Expression TOK_SEMICOLON 
	| TOK_RETURN TOK_SEMICOLON 
	| TOK_GOTO Identifier TOK_SEMICOLON 
	| BlockDeclaration 
	| TryBlock 
	| AsmDefinition 
	| NamespaceDecl 

ExpressionStatement ::=
	TOK_SEMICOLON 
	| Expression TOK_SEMICOLON 

CompoundStatement ::=
	CompoundStmtHelper TOK_RBRACE 

CompoundStmtHelper ::=
	TOK_LBRACE 
	| CompoundStmtHelper Statement 

Condition ::=
	Expression 
	| TypeSpecifier Declarator TOK_EQUAL AssignmentExpression 

ConditionOpt ::=
	/*empty*/
	| Condition 

ForInitStatement ::=
	ExpressionStatement 
	| SimpleDeclaration 

TFDeclaration ::=
	BlockDeclaration 
	| FunctionDefinition 
	| TemplateDeclaration 
	| ExplicitInstantiation 
	| LinkageSpecification 
	| AsmDefinition 
	| NamespaceDefinition 
	| NamespaceDecl 

BlockDeclaration ::=
	SimpleDeclaration 

SimpleDeclaration ::=
	DeclSpecifier InitDeclaratorList TOK_SEMICOLON 
	| DeclSpecifier TOK_SEMICOLON 

DeclSpecifier ::=
	PQTypeName UberModifierSeqOpt 
	| UberModifierSeq PQTypeName UberModifierSeqOpt 
	| UberTypeKeyword UberTypeAndModifierSeqOpt 
	| UberModifierSeq UberTypeKeyword UberTypeAndModifierSeqOpt 
	| ElaboratedOrSpecifier UberModifierSeqOpt 
	| UberModifierSeq ElaboratedOrSpecifier UberModifierSeqOpt 

ElaboratedOrSpecifier ::=
	ElaboratedTypeSpecifier 
	| ClassSpecifier 
	| EnumSpecifier 

UberModifierSeq ::=
	UberModifier 
	| UberModifierSeq UberModifier 

UberModifierSeqOpt ::=
	/*empty*/
	| UberModifierSeq 

UberTypeAndModifierSeqOpt ::=
	/*empty*/
	| UberTypeAndModifierSeqOpt UberModifier 
	| UberTypeAndModifierSeqOpt UberTypeKeyword 

UberCVQualifierSeq ::=
	UberCVQualifier 
	| UberCVQualifierSeq UberCVQualifier 

UberCVQualifierSeqOpt ::=
	/*empty*/
	| UberCVQualifierSeq 

UberTypeAndCVQualifierSeqOpt ::=
	/*empty*/
	| UberTypeAndCVQualifierSeqOpt UberCVQualifier 
	| UberTypeAndCVQualifierSeqOpt UberTypeKeyword 

UberModifier ::=
	TOK_AUTO 
	| TOK_REGISTER 
	| TOK_STATIC 
	| TOK_EXTERN 
	| TOK_MUTABLE 
	| TOK_INLINE 
	| TOK_VIRTUAL 
	| TOK_FRIEND 
	| TOK_TYPEDEF 
	| TOK_CONST 
	| TOK_VOLATILE 

UberCVQualifier ::=
	TOK_CONST 
	| TOK_VOLATILE 

UberTypeKeyword ::=
	TOK_CHAR 
	| TOK_WCHAR_T 
	| TOK_BOOL 
	| TOK_SHORT 
	| TOK_INT 
	| TOK_LONG 
	| TOK_SIGNED 
	| TOK_UNSIGNED 
	| TOK_FLOAT 
	| TOK_DOUBLE 
	| TOK_VOID 

ElaboratedTypeSpecifier ::=
	ClassKey PQTypeName 
	| TOK_ENUM PQTypeName 
	| TOK_TYPENAME PQTypeName 

TypeSpecifier ::=
	PQTypeName UberCVQualifierSeqOpt 
	| UberCVQualifierSeq PQTypeName UberCVQualifierSeqOpt 
	| UberTypeKeyword UberTypeAndCVQualifierSeqOpt 
	| UberCVQualifierSeq UberTypeKeyword UberTypeAndCVQualifierSeqOpt 
	| ElaboratedOrSpecifier UberCVQualifierSeqOpt 
	| UberCVQualifierSeq ElaboratedOrSpecifier UberCVQualifierSeqOpt 

PQTypeName ::=
	PQTypeName_ncc 
	| TOK_COLONCOLON PQTypeName_ncc 

PQTypeName_ncc ::=
	Identifier 
	| TemplateId 
	| Identifier TOK_COLONCOLON PQTypeName_notfirst 
	| Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN TOK_COLONCOLON PQTypeName_notfirst 

PQTypeName_notfirst ::=
	PQTypeName_ncc 
	| TOK_TEMPLATE TemplateId 
	| TOK_TEMPLATE Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN TOK_COLONCOLON PQTypeName_notfirst 

EnumSpecifier ::=
	TOK_ENUM TOK_LBRACE EnumeratorListOpt TOK_RBRACE 
	| TOK_ENUM Identifier TOK_LBRACE EnumeratorListOpt TOK_RBRACE 

EnumeratorListOpt ::=
	/*empty*/
	| EnumeratorDefinition 
	| EnumeratorDefinition TOK_COMMA EnumeratorListOpt 

EnumeratorDefinition ::=
	Identifier 
	| Identifier TOK_EQUAL ConstantExpression 

AsmDefinition ::=
	TOK_ASM TOK_LPAREN StringLiteral TOK_RPAREN TOK_SEMICOLON 

LinkageSpecification ::=
	TOK_EXTERN TOK_STRING_LITERAL TOK_LBRACE TranslationUnit TOK_RBRACE 
	| TOK_EXTERN TOK_STRING_LITERAL TFDeclaration 

InitDeclaratorList ::=
	InitDeclarator 
	| InitDeclarator TOK_COMMA InitDeclaratorList 

InitDeclarator ::=
	Declarator 
	| Declarator Initializer 

Initializer ::=
	TOK_EQUAL SimpleInitializerClause 
	| TOK_LPAREN ExpressionList TOK_RPAREN 

SimpleInitializerClause ::=
	AssignmentExpression 
	| CompoundInitializer 

InitializerClause ::=
	SimpleInitializerClause 
	| DesignatorList TOK_EQUAL SimpleInitializerClause 

CompoundInitializer ::=
	TOK_LBRACE InitializerList CommaOpt TOK_RBRACE 
	| TOK_LBRACE TOK_RBRACE 

CommaOpt ::=
	/*empty*/
	| TOK_COMMA 

InitializerList ::=
	InitializerClause 
	| InitializerList TOK_COMMA InitializerClause 

DesignatorList ::=
	Designator 
	| Designator DesignatorList 

Designator ::=
	TOK_DOT Identifier 
	| TOK_LBRACKET ConstantExpression TOK_RBRACKET 
	| TOK_LBRACKET ConstantExpression TOK_ELLIPSIS ConstantExpression TOK_RBRACKET 

Declarator ::=
	TOK_STAR CVQualifierSeqOpt Declarator 
	| TOK_AND CVQualifierSeqOpt Declarator 
	| PtrToMemberName TOK_STAR CVQualifierSeqOpt Declarator 
	| DirectDeclarator 

DirectDeclarator ::=
	IdExpression 
	| PQDtorName 
	| DirectDeclarator TOK_LPAREN ParameterDeclarationClause TOK_RPAREN CVQualifierSeqOpt ExceptionSpecificationOpt 
	| DirectDeclarator TOK_LBRACKET ConstantExpressionOpt TOK_RBRACKET 
	| TOK_LPAREN Declarator TOK_RPAREN 

PQDtorName ::=
	TOK_TILDE Identifier 
	| TOK_TILDE Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN 
	| Identifier TOK_COLONCOLON PQDtorName 
	| Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN TOK_COLONCOLON PQDtorName 
	| TOK_TEMPLATE Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN TOK_COLONCOLON PQDtorName 

PtrToMemberName ::=
	IdExpression TOK_COLONCOLON 

CVQualifierSeqOpt ::=
	/*empty*/
	| CVQualifierSeq 

CVQualifierSeq ::=
	CVQualifier 
	| CVQualifier CVQualifierSeq 

CVQualifier ::=
	TOK_CONST 
	| TOK_VOLATILE 

TypeId ::=
	TypeSpecifier AbstractDeclaratorOpt 

AbstractDeclaratorOpt ::=
	/*empty*/
	| AbstractDeclarator 

AbstractDeclarator ::=
	TOK_STAR CVQualifierSeqOpt AbstractDeclaratorOpt 
	| TOK_AND CVQualifierSeqOpt AbstractDeclaratorOpt 
	| PtrToMemberName TOK_STAR CVQualifierSeqOpt AbstractDeclaratorOpt 
	| DirectAbstractDeclarator 

DirectAbstractDeclaratorOpt ::=
	/*empty*/
	| DirectAbstractDeclarator 

DirectAbstractDeclarator ::=
	DirectAbstractDeclaratorOpt TOK_LPAREN ParameterDeclarationClause TOK_RPAREN CVQualifierSeqOpt ExceptionSpecificationOpt 
	| DirectAbstractDeclaratorOpt TOK_LBRACKET ConstantExpressionOpt TOK_RBRACKET 
	| TOK_LPAREN AbstractDeclarator TOK_RPAREN 

ParameterDeclarationClause ::=
	ParameterDeclarationList 
	| /*empty*/

ParameterDeclarationList ::=
	TOK_ELLIPSIS 
	| ParameterDeclaration TOK_ELLIPSIS 
	| ParameterDeclaration 
	| ParameterDeclaration TOK_COMMA ParameterDeclarationList 

ParameterDeclaration ::=
	TypeSpecifier ParameterDeclarator 
	| TOK_REGISTER TypeSpecifier ParameterDeclarator 
	| TypeSpecifier TOK_REGISTER ParameterDeclarator 

ParameterDeclarator ::=
	UnqualifiedDeclarator 
	| UnqualifiedDeclarator TOK_EQUAL AssignmentExpression 
	| AbstractDeclaratorOpt 
	| AbstractDeclaratorOpt TOK_EQUAL AssignmentExpression 

FunctionDefinition ::=
	DeclSpecifier FDDeclarator FunctionBody 
	| DeclSpecifier FDDeclarator TOK_TRY FunctionBody HandlerSeq 
	| CDtorModifierSeq FDDeclarator CtorInitializerOpt FunctionBody 
	| FDDeclarator CtorInitializerOpt FunctionBody 
	| CDtorModifierSeq FDDeclarator TOK_TRY CtorInitializerOpt FunctionBody HandlerSeq 
	| FDDeclarator TOK_TRY CtorInitializerOpt FunctionBody HandlerSeq 

FDDeclarator ::=
	Declarator 

FunctionBody ::=
	CompoundStatement 

CtorInitializerOpt ::=
	/*empty*/
	| TOK_COLON MemInitializerList 

ClassSpecifier ::=
	ClassKey ClassHeadNameOpt BaseClauseOpt TOK_LBRACE MemberDeclarationSeqOpt TOK_RBRACE 

ClassHeadNameOpt ::=
	/*empty*/
	| ClassHeadName 

ClassHeadName ::=
	Identifier 
	| TemplateId 
	| Identifier TOK_COLONCOLON ClassHeadName 
	| Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN TOK_COLONCOLON ClassHeadName 
	| TOK_TEMPLATE Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN TOK_COLONCOLON ClassHeadName 

ClassKey ::=
	TOK_CLASS 
	| TOK_STRUCT 
	| TOK_UNION 

MemberDeclarationSeqOpt ::=
	/*empty*/
	| MemberDeclarationSeqOpt TOK_SEMICOLON 
	| MemberDeclarationSeqOpt MemberDeclaration 
	| MemberDeclarationSeqOpt AccessSpecifier TOK_COLON 

AccessSpecifier ::=
	TOK_PUBLIC 
	| TOK_PRIVATE 
	| TOK_PROTECTED 

MemberDeclaration ::=
	DeclSpecifier MemberDeclaratorList TOK_SEMICOLON 
	| DeclSpecifier TOK_SEMICOLON 
	| PQualifiedId TOK_SEMICOLON 
	| TOK_USING IdExpression TOK_SEMICOLON 
	| FunctionDefinition 
	| CDtorProtoDecl 
	| TemplateDeclaration 

CDtorProtoDecl ::=
	CDtorModifierSeq MemberDeclarator TOK_SEMICOLON 
	| MemberDeclarator TOK_SEMICOLON 

MemberDeclaratorList ::=
	MemberDeclarator 
	| MemberDeclarator TOK_COMMA MemberDeclaratorList 

MemberDeclarator ::=
	Declarator 
	| Declarator TOK_EQUAL ConstantExpression 
	| IdentifierOpt TOK_COLON ConstantExpression 

IdentifierOpt ::=
	/*empty*/
	| Identifier 

CDtorModifier ::=
	TOK_EXPLICIT 
	| TOK_VIRTUAL 
	| TOK_INLINE 
	| TOK_FRIEND 

CDtorModifierSeq ::=
	CDtorModifier 
	| CDtorModifierSeq CDtorModifier 

BaseClauseOpt ::=
	/*empty*/
	| TOK_COLON BaseSpecifierList 

BaseSpecifierList ::=
	BaseSpecifier 
	| BaseSpecifier TOK_COMMA BaseSpecifierList 

BaseSpecifier ::=
	PQClassName 
	| TOK_VIRTUAL AccessSpecifierOpt PQClassName 
	| AccessSpecifier VirtualOpt PQClassName 

VirtualOpt ::=
	/*empty*/
	| TOK_VIRTUAL 

AccessSpecifierOpt ::=
	/*empty*/
	| AccessSpecifier 

PQClassName ::=
	PQTypeName 

ConversionFunctionId ::=
	TOK_OPERATOR ConversionTypeId 

ConversionTypeId ::=
	TypeSpecifier ConversionDeclaratorOpt 

ConversionDeclaratorOpt ::=
	/*empty*/
	| TOK_STAR CVQualifierSeqOpt ConversionDeclaratorOpt 
	| TOK_AND CVQualifierSeqOpt ConversionDeclaratorOpt 
	| PtrToMemberName TOK_STAR CVQualifierSeqOpt ConversionDeclaratorOpt 

MemInitializerList ::=
	MemInitializer 
	| MemInitializer TOK_COMMA MemInitializerList 

MemInitializer ::=
	MemInitializerId TOK_LPAREN ExpressionListOpt TOK_RPAREN 

MemInitializerId ::=
	PQTypeName 

OperatorFunctionId ::=
	TOK_OPERATOR Operator 

Operator ::=
	TOK_NEW 
	| TOK_DELETE 
	| TOK_NEW TOK_LBRACKET TOK_RBRACKET 
	| TOK_DELETE TOK_LBRACKET TOK_RBRACKET 
	| TOK_BANG 
	| TOK_TILDE 
	| TOK_PLUSPLUS 
	| TOK_MINUSMINUS 
	| TOK_PLUS 
	| TOK_MINUS 
	| TOK_STAR 
	| TOK_SLASH 
	| TOK_PERCENT 
	| TOK_LEFTSHIFT 
	| TOK_RIGHTSHIFT 
	| TOK_AND 
	| TOK_XOR 
	| TOK_OR 
	| TOK_EQUAL 
	| TOK_PLUSEQUAL 
	| TOK_MINUSEQUAL 
	| TOK_STAREQUAL 
	| TOK_SLASHEQUAL 
	| TOK_PERCENTEQUAL 
	| TOK_LEFTSHIFTEQUAL 
	| TOK_RIGHTSHIFTEQUAL 
	| TOK_ANDEQUAL 
	| TOK_XOREQUAL 
	| TOK_OREQUAL 
	| TOK_EQUALEQUAL 
	| TOK_NOTEQUAL 
	| TOK_LESSTHAN 
	| TOK_GREATERTHAN 
	| TOK_LESSEQ 
	| TOK_GREATEREQ 
	| TOK_ANDAND 
	| TOK_OROR 
	| TOK_ARROW 
	| TOK_ARROWSTAR 
	| TOK_LBRACKET TOK_RBRACKET 
	| TOK_LPAREN TOK_RPAREN 
	| TOK_COMMA 

TemplateDeclaration ::=
	TemplatePreamble FunctionDefinition 
	| TemplatePreamble SimpleDeclaration 
	| TemplatePreamble TemplateDeclaration 
	| TemplatePreamble CDtorProtoDecl 

TemplatePreamble ::=
	TOK_TEMPLATE TOK_LESSTHAN TemplateParameterList TOK_GREATERTHAN 
	| TOK_EXPORT TOK_TEMPLATE TOK_LESSTHAN TemplateParameterList TOK_GREATERTHAN 
	| TOK_TEMPLATE TOK_LESSTHAN TOK_GREATERTHAN 
	| TOK_EXPORT TOK_TEMPLATE TOK_LESSTHAN TOK_GREATERTHAN 

TemplateParameterList ::=
	ClassOrTypename IdentifierOpt DefaultTypeOpt 
	| ClassOrTypename IdentifierOpt DefaultTypeOpt TOK_COMMA TemplateParameterList 
	| ParameterDeclaration 
	| ParameterDeclaration TOK_COMMA TemplateParameterList 

ClassOrTypename ::=
	TOK_CLASS 
	| TOK_TYPENAME 
	| TOK_TEMPLATE TOK_LESSTHAN TemplateParameterList TOK_GREATERTHAN TOK_CLASS 

DefaultTypeOpt ::=
	/*empty*/
	| TOK_EQUAL TypeId 

TemplateArgumentListOpt ::=
	/*empty*/
	| TemplateArgumentList 

TemplateId ::=
	Identifier TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN 
	| OperatorFunctionId TOK_LESSTHAN TemplateArgumentListOpt TOK_GREATERTHAN 

TemplateArgumentList ::=
	TemplateArgument 

TemplateArgumentListTailOpt ::=
	/*empty*/
	| TOK_COMMA TemplateArgument 

TemplateArgument ::=
	TypeId TemplateArgumentListTailOpt 
	| AssignmentExpression TemplateArgumentListTailOpt 

ExplicitInstantiation ::=
	TOK_TEMPLATE BlockDeclaration 
	| TOK_INLINE TOK_TEMPLATE BlockDeclaration 

TryBlock ::=
	TOK_TRY CompoundStatement HandlerSeq 

HandlerSeq ::=
	Handler 
	| Handler HandlerSeq 

Handler ::=
	TOK_CATCH TOK_LPAREN HandlerParameter TOK_RPAREN CompoundStatement 
	| TOK_CATCH TOK_LPAREN TOK_ELLIPSIS TOK_RPAREN CompoundStatement 

HandlerParameter ::=
	TypeSpecifier UnqualifiedDeclarator 
	| TypeSpecifier AbstractDeclaratorOpt 

UnqualifiedDeclarator ::=
	Declarator 

ThrowExpression ::=
	TOK_THROW 
	| TOK_THROW AssignmentExpression 

ExceptionSpecificationOpt ::=
	/*empty*/
	| TOK_THROW TOK_LPAREN TOK_RPAREN 
	| TOK_THROW TOK_LPAREN TypeIdList TOK_RPAREN 

TypeIdList ::=
	TypeId 
	| TypeId TOK_COMMA TypeIdList 

NamespaceDefinition ::=
	TOK_NAMESPACE IdentifierOpt TOK_LBRACE TranslationUnit TOK_RBRACE 

NamespaceDecl ::=
	TOK_NAMESPACE Identifier TOK_EQUAL IdExpression TOK_SEMICOLON 
	| TOK_USING IdExpression TOK_SEMICOLON 
	| TOK_USING TOK_NAMESPACE IdExpression TOK_SEMICOLON 


//
// Tokens
//

//\(\S+\)\s+return tok(\([^)]+\));	\2 ::= \1
/* operators, punctuators and keywords: tokens with one spelling */
TOK_ASM ::= "asm"
TOK_AUTO ::= "auto"
TOK_BREAK ::= "break"
TOK_BOOL ::= "bool"
TOK_CASE ::= "case"
TOK_CATCH ::= "catch"
TOK_CDECL ::= "cdecl"
TOK_CHAR ::= "char"
TOK_CLASS ::= "class"
TOK_CONST ::= "const"
TOK_CONST_CAST ::= "const_cast"
TOK_CONTINUE ::= "continue"
TOK_DEFAULT ::= "default"
TOK_DELETE ::= "delete"
TOK_DO ::= "do"
TOK_DOUBLE ::= "double"
TOK_DYNAMIC_CAST ::= "dynamic_cast"
TOK_ELSE ::= "else"
TOK_ENUM ::= "enum"
TOK_EXPLICIT ::= "explicit"
TOK_EXPORT ::= "export"
TOK_EXTERN ::= "extern"
TOK_FALSE ::= "false"
TOK_FLOAT ::= "float"
TOK_FOR ::= "for"
TOK_FRIEND ::= "friend"
TOK_GOTO ::= "goto"
TOK_IF ::= "if"
TOK_INLINE ::= "inline"
TOK_INT ::= "int"
TOK_LONG ::= "long"
TOK_MUTABLE ::= "mutable"
TOK_NAMESPACE ::= "namespace"
TOK_NEW ::= "new"
TOK_OPERATOR ::= "operator"
TOK_PASCAL ::= "pascal"
TOK_PRIVATE ::= "private"
TOK_PROTECTED ::= "protected"
TOK_PUBLIC ::= "public"
TOK_REGISTER ::= "register"
TOK_REINTERPRET_CAST ::= "reinterpret_cast"
TOK_RETURN ::= "return"
TOK_SHORT ::= "short"
TOK_SIGNED ::= "signed"
TOK_SIZEOF ::= "sizeof"
TOK_STATIC ::= "static"
TOK_STATIC_CAST ::= "static_cast"
TOK_STRUCT ::= "struct"
TOK_SWITCH ::= "switch"
TOK_TEMPLATE ::= "template"
TOK_THIS ::= "this"
TOK_THROW ::= "throw"
TOK_TRUE ::= "true"
TOK_TRY ::= "try"
TOK_TYPEDEF ::= "typedef"
TOK_TYPEID ::= "typeid"
TOK_TYPENAME ::= "typename"
TOK_UNION ::= "union"
TOK_UNSIGNED ::= "unsigned"
TOK_USING ::= "using"
TOK_VIRTUAL ::= "virtual"
TOK_VOID ::= "void"
TOK_VOLATILE ::= "volatile"
TOK_WCHAR_T ::= "wchar_t"
TOK_WHILE ::= "while"

TOK_LPAREN ::= "("
TOK_RPAREN ::= ")"
TOK_LBRACKET ::= "["
TOK_RBRACKET ::= "]"
TOK_ARROW ::= "->"
TOK_COLONCOLON ::= "::"
TOK_DOT ::= "."
TOK_BANG ::= "!"
TOK_TILDE ::= "~"
TOK_PLUS ::= "+"
TOK_MINUS ::= "-"
TOK_PLUSPLUS ::= "++"
TOK_MINUSMINUS ::= "--"
TOK_AND ::= "&"
TOK_STAR ::= "*"
TOK_DOTSTAR ::= ".*"
TOK_ARROWSTAR ::= "->*"
TOK_SLASH ::= "/"
TOK_PERCENT ::= "%"
TOK_LEFTSHIFT ::= "<<"
TOK_RIGHTSHIFT ::= ">>"
TOK_LESSTHAN ::= "<"
TOK_LESSEQ ::= "<="
TOK_GREATERTHAN ::= ">"
TOK_GREATEREQ ::= ">="
TOK_EQUALEQUAL ::= "=="
TOK_NOTEQUAL ::= "!="
TOK_XOR ::= "^"
TOK_OR ::= "|"
TOK_ANDAND ::= "&&"
TOK_OROR ::= "||"
TOK_QUESTION ::= "?"
TOK_COLON ::= ":"
TOK_EQUAL ::= "="
TOK_STAREQUAL ::= "*="
TOK_SLASHEQUAL ::= "/="
TOK_PERCENTEQUAL ::= "%="
TOK_PLUSEQUAL ::= "+="
TOK_MINUSEQUAL ::= "-="
TOK_ANDEQUAL ::= "&="
TOK_XOREQUAL ::= "^="
TOK_OREQUAL ::= "|="
TOK_LEFTSHIFTEQUAL ::= "<<="
TOK_RIGHTSHIFTEQUAL ::= ">>="
TOK_COMMA ::= ","
TOK_ELLIPSIS ::= "..."
TOK_SEMICOLON ::= ";"
TOK_LBRACE ::= "{"
TOK_RBRACE ::= "}"
